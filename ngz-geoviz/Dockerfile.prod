###########
# BUILDER #
###########
FROM node:lts-alpine3.9 as builder

ENV MapboxAccessToken=$MapboxAccessToken

COPY . /usr/src/app/

# set work directory
WORKDIR /usr/src/app/frontend

# Install frontend packages
RUN npm install

# Make build
RUN npm run build



#########
# FINAL #
#########


# pull python apline with precompiled pandas (since it takes forever to compile it from source)
FROM nickgryg/alpine-pandas:3.8.1

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/static/datahub
WORKDIR $APP_HOME

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install dependencies
RUN apk update \
    && apk add libpq postgresql-dev gcc python3-dev musl-dev binutils proj geos-dev gdal-dev

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

COPY --from=builder /usr/src/app/frontend/static ./frontend/static
WORKDIR $APP_HOME/frontend/static/frontend
RUN gzip -k *

WORKDIR $APP_HOME

# install dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt /usr/src/app/requirements.txt
RUN pip install -r requirements.txt

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]